## Generic security enhancements. Use https://securityheaders.io to test
## and recommend further improvements.

## Hide Nginx version in error messages and reponse headers.
server_tokens off;

## Enable clickjacking protection in modern browsers. Available in
## IE8 also. See https://developer.mozilla.org/en/The_X-FRAME-OPTIONS_response_header
add_header X-Frame-Options "SAMEORIGIN" always;

## MIME sniffing prevention
## when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
## to disable content-type sniffing on some browsers.
## https://www.owasp.org/index.php/List_of_useful_HTTP_headers
## currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
## http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
## 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
add_header X-Content-Type-Options "nosniff" always;

## Enable cross-site scripting filter in supported browsers.
## https://www.owasp.org/index.php/List_of_useful_HTTP_headers
add_header X-Xss-Protection "1; mode=block" always;

## Whitelist sources which are allowed to load assets (JS, CSS, etc). The following will block
## only none HTTPS assets, but check out https://scotthelme.co.uk/content-security-policy-an-introduction/
## for an in-depth guide on creating a more restrictive policy.
## This website also helps you generate a policy http://cspisawesome.com/
# add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval';" always;
# add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' https://www.google-analytics.com;";
