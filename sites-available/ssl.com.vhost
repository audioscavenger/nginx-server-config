




server {
  ## Ports to listen on, uncomment one.
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  ## Server name to listen for
  server_name www.ssl.com;

  ## Path to document root
  root /sites/ssl.com/public;

  ## Paths to certificate files.
  ssl_certificate /etc/letsencrypt/live/ssl.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/ssl.com/privkey.pem;

  ## File to be used as index
  # index index.php index.html;

  ## Overrides logs defined in nginx.conf, allows per site logs.
  access_log /sites/ssl.com/logs/access.log;
  error_log /sites/ssl.com/logs/error.log;

  ## Default server block rules
  include global/server/defaults.conf;

  ## Static files, images etc
  include global/server/static-files.conf;




  ## SSL rules
  include global/server/ssl.conf;

  ## wp-admin security rules
  # include locations/wp-admin_example.conf;

  location / {
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ \.php$ {
    try_files $uri =404;
    error_page 404 = @redirect_home;
    include global/fastcgi-params.conf;

    ## Use the php pool defined in the upstream variable.
    ## See global/php-pool.conf for definition.
    fastcgi_pass   $upstream;
  }

  ## add here locations aliases
  # include locations/location_example.conf;

  ## Rewrite robots.txt
  rewrite ^/robots.txt$ /index.php last;






  ## Why show a boring 404 error? Redirect to your home page!
  location @redirect_home {
    rewrite ^ https://www.ssl.com permanent;
  }
}

## Redirect http to https
server {
  listen 80;
  listen [::]:80;
  server_name ssl.com www.ssl.com;

  include global/server/security-general.conf;

  return 301 https://www.ssl.com$request_uri;
}

## Redirect non-www to www https://www.yes-www.org/why-use-www/
server {
  listen 443;
  listen [::]:443;
  server_name ssl.com;

  return 301 https://www.ssl.com$request_uri;
}
